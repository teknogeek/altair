(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{288:function(e,t,a){"use strict";a.r(t);var r=a(16),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"editor-capabilities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#editor-capabilities"}},[e._v("#")]),e._v(" Editor capabilities")]),e._v(" "),a("p",[e._v("Altair comes with several other little editor features to give you all the tools to work with GraphQL. These features can be accessed from the toolbox icon in the sidebar.")]),e._v(" "),a("h2",{attrs:{id:"compress-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compress-query"}},[e._v("#")]),e._v(" Compress query")]),e._v(" "),a("p",[e._v("You can compress the query to a minified form, removing any unnecessary whitespace\nand comments. You can use this after you have made a query and you want to use it in your\nclient side application. This helps save as many bytes as possible when making network requests.")]),e._v(" "),a("h2",{attrs:{id:"format-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#format-query"}},[e._v("#")]),e._v(" Format query")]),e._v(" "),a("p",[e._v("You can format the query in the editor in a properly indented manner for easier reading.\nThis makes it easy to work with queries you might copy from one file to another,\nwhich might have lost their indentation (or were never indented before).")]),e._v(" "),a("h2",{attrs:{id:"convert-to-named-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#convert-to-named-query"}},[e._v("#")]),e._v(" Convert to named query")]),e._v(" "),a("p",[e._v("Sometimes you want to get a named query so you can have multiple queries in the same window. This is just a convenient way to generate a random name for your query for you.")]),e._v(" "),a("h2",{attrs:{id:"refactor-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refactor-query"}},[e._v("#")]),e._v(" Refactor query")]),e._v(" "),a("p",[e._v("This functionality attempts to go one step further from the named query conversion. It aims to apply a number of refactoring to the query. At the moment it does the following:")]),e._v(" "),a("ul",[a("li",[e._v("transform query to a named query")]),e._v(" "),a("li",[e._v("moves any arguments into query variables with the original varibles moved to the query variables section")])]),e._v(" "),a("h2",{attrs:{id:"copy-as-curl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#copy-as-curl"}},[e._v("#")]),e._v(" Copy as cURL")]),e._v(" "),a("p",[e._v("You can also easily copy your query as cURL. This is handy if you want to share the request with someone else or want to test the same request from the terminal.")]),e._v(" "),a("h2",{attrs:{id:"clear"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[e._v("#")]),e._v(" Clear")]),e._v(" "),a("p",[e._v("This just deletes all queries from the window (essentially this is: Select All -> Delete).")])])}),[],!1,null,null,null);t.default=s.exports}}]);